apply plugin: 'com.android.library'

android {
//    namespace 'com.example.mylibrary'
    compileSdkVersion 29
    buildToolsVersion "26.0.3"

    defaultConfig {
        minSdkVersion 18

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //Copy类型
    task makeJar(type: Copy) {
        //删除存在的
        //delete 'build/libs/jarsdk.jar'

        //设置拷贝的文件
        // from('build/intermediates/bundles/release/')
        from('build/intermediates/aar_main_jar/release/')

        //打进jar包后的文件目录
        into('build/libs/')

        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')

        //重命名
        rename ('classes.jar', 'myJar.jar')
    }

    makeJar.dependsOn(build)
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}